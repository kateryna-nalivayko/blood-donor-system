services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: blood-donor-api:latest
    container_name: blood-donor-api
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./backend/app:/app/app
      - ./backend/scripts:/app/scripts
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: blood-donor-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  dbbrowser:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    depends_on:
      - db
    restart: unless-stopped


volumes:
  postgres_data:
    name: blood-donor-db-data